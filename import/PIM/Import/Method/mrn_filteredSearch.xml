<AML>
 <Item type="Method" id="D5C8BD42308044B68D308CCD73FD0223" action="add">
  <comments />
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[// Sets the search filter on various properties on various itemtypes
// ItemTypes: MRN_Property, MRN_Item, MRN_ExportProfile, MRN_Property_ETIM_Class
// Called from OnSearchDialog event on the Property
// On MRN_Item, restricts search to MSL or Frame, based on classification
// On MRN_ExportProfile restricvst search to MSL
// On MRN_Property restricts search to MRN Item properties only
// On MRN_Property_ETIM_Class returns only those Properties that are on the Group Properties tab


//debugger;

// Get the name of the calling property
var srcProp = "Not Found";
var i = 0;
while(window[i] !== undefined)
{
    if (window[i].location.href.indexOf("searchDialog.html") == -1){
          i++;
          continue;
    }
    srcProp = window[i].sourcePropertyName; //get the property name
    break;
}


var level = parent.thisItem.getProperty("classification");
var type = parent.thisItem.getType();

var Filter = new Object();

if (level === "Level 5 - Frame" || type == "MRN_ExportProfile")
    Filter["classification"]={filterValue:"Level 4 - MSL", isFilterFixed:true};
else if (level === "Level 6 - Product")
    Filter["classification"]={filterValue:"Level 5 - Frame", isFilterFixed:true};
else if (type == "MRN_Property")
{
    Filter["source_id"]={filterValue:"MRN_Item", isFilterFixed:true};
   
    if (srcProp === "mrn_property")
    { 
       // Get the id of the main item (MRN_Property)
        var parentId = parent.thisItem.getID();
        
        // Get the relationships
        var itemWithRelationships = parent.thisItem.fetchRelationships("MRN_Property_Property");
        
        // Get relationship items
        var relationships = itemWithRelationships.getRelationships("MRN_Property_Property");
        
        var idList = [];
        
        // Add each related item on the relationship to the idList
        for (var j = 0; j < relationships.getItemCount(); j++) 
        {
            var relationshipItem = relationships.getItemByIndex(j);
            var propertyItem = relationshipItem.getRelatedItem();
            idList.push(propertyItem.getID());
        }
        
        // Set the search criteria for the filter dialog
        inArgs.QryItem.setCriteria("id","'"+idList.join("','")+"'","in"); 
    }
}
return Filter;



]]></method_code>
  <method_type>JavaScript</method_type>
  <name>mrn_filteredSearch</name>
 </Item>
</AML>