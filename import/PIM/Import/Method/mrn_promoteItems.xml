<AML>
 <Item type="Method" id="74410A98229440888DEA9B76239D6EF2" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[// mrn_promoteItems    (derived from PE_ManualRelease)
// Called from a server action. Allows promoting items in bulk
// If "In Development", promotes to "Released"
// If "Released", promotes to "Published"

//  if (System.Diagnostics.Debugger.Launch()) 
//   //System.Diagnostics.Debugger.Break();

Innovator inn = this.getInnovator();
string thisType = this.getType();
string thisName = this.getProperty("keyed_name", "");
string state = this.getProperty("state", "");
bool isInDevState = String.Equals(state, "In Development", StringComparison.Ordinal);
bool isInReleased = String.Equals(state, "Released", StringComparison.Ordinal);

// Item must be in Preliminary or Manual Change state
if (!isInDevState && !isInReleased)
{
	return inn.newError(CCO.ErrorLookup.Lookup(this.getProperty("keyed_name") + " - Item must be in \"In Development\" or \"Released\" state", thisType));
}

//Get the identity that is allowed to use this method
Item itm = inn.newItem("Variable", "get");
itm.setProperty("keyed_name","MRNPromoteIdentity");
itm = itm.apply();
string allowedId = itm.getProperty("value");
//string allowedId = "Administrators";
Item idItm = inn.newItem("Identity", "get");
idItm.setProperty("id", allowedId);
idItm = idItm.apply();
string allowedIdName = idItm.getProperty("keyed_name");

if (!CCO.Permissions.IdentityListHasId(Aras.Server.Security.Permissions.Current.IdentitiesList, allowedId))
{
	return inn.newError("You must be a member of: " + allowedIdName);
}

// 
Item resItem = null;
string promotionName ="";
if (isInDevState)
        promotionName = "Released";
    else if (isInReleased)
        promotionName = "Published";
        
// Promote the item
try{
    
    resItem = this.promote(promotionName, "Manual Release");
}
catch (Aras.Server.Core.ItemIsLockedException)
{
    return inn.newError("Item \"" + this.getProperty("keyed_name") + "\" is locked");
}
catch (Exception ex){
    if(resItem == null)
    {
        return inn.newError("Item \"" + this.getProperty("keyed_name") + "\" failed validation. Try OOTB Promote to get the validation message.");
    }
    
    throw new Exception(ex.Message);
    
}
    
if(resItem == null || resItem.isError())
{
    return inn.newError("Error promoting Item: " + this.getProperty("keyed_name"));
}

Item promoteditem = this.newItem(thisType, "get");
promoteditem.setID(this.getID());
promoteditem = promoteditem.apply();
return promoteditem;
//return inn.newItem("Item \"" + this.getProperty("keyed_name") +"\" promoted to: " + promotionName);
]]></method_code>
  <method_type>C#</method_type>
  <name>mrn_promoteItems</name>
 </Item>
</AML>