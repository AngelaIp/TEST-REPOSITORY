<AML>
 <Item type="Report" id="EB940D65D28E47618BC9708787223C58" action="add">
  <description>Find and list circular dependencies between Parts</description>
  <location>server</location>
  <method keyed_name="PE_SearchPartCircularReferences" type="Method">
   <Item type="Method" action="get" select="id">
    <name>PE_SearchPartCircularReferences</name>
   </Item>
  </method>
  <report_query />
  <target>window</target>
  <type>itemtype</type>
  <xsl_stylesheet><![CDATA[<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <xsl:output method="html"/>
  <xsl:template match="/">
    <html>
      <head>
        <title>List of circular dependencies between Parts</title>
        <style type="text/css">
        .evenLoop{background-color:#cccccc;}
        .oddLoop{background-color:#ffffff;}
        </style>
      </head>
      <body>
        <strong>List of circular dependencies between Parts (<script>function m00(r, n){r += ""; if (!n) n = 2; while(r.length &lt; n){r = "0" + r;} return r;} var dt = new Date(); var a = top.opener.top.aras; if (a){var s = m00(dt.getUTCFullYear(),4)+"-"+m00((dt.getUTCMonth()+1))+"-"+m00(dt.getUTCDate())+"T"+m00(dt.getUTCHours())+":"+m00(dt.getUTCMinutes())+":"+m00(dt.getUTCSeconds()); s = a.IomInnovator.GetI18NSessionContext().ConvertUtcDateTimeToNeutral(s, "yyyy-MM-ddTHH:mm:ss"); s = a.convertFromNeutral(s, "date", "short_date"); document.write(s);}</script>)</strong>
        <xsl:choose>
          <xsl:when test="not(//Result/Item[loop_number='0'])">
            No circular dependencies between Parts are found.
          </xsl:when>
          <xsl:otherwise>
            <table border="1" cellpadding="2" cellspacing="0">
              <tbody>
                <tr>
                  <th>Loop #</th>
                  <th>Source Part</th>
                  <th>Referenced Part</th>
                </tr>
                <xsl:for-each select="//Result/Item">
                  <tr>
                    <xsl:attribute name="class"><xsl:choose><xsl:when test="number(loop_number mod '2')='0'">evenLoop</xsl:when><xsl:otherwise>oddLoop</xsl:otherwise></xsl:choose></xsl:attribute>
                    <xsl:variable name="currentLoop" select="loop_number"/>
                    <xsl:if test="not(preceding-sibling::Item[1]) or preceding-sibling::Item[1]/loop_number != $currentLoop">
                      <td>
                        <xsl:attribute name="rowspan"><xsl:value-of select="count(following-sibling::Item[loop_number=$currentLoop]) + 1"/></xsl:attribute>
                        <xsl:value-of select="$currentLoop + 1"/>
                      </td>
                    </xsl:if>
                    <td>
                      <strong><xsl:value-of select="source_keyed_name"/></strong> gen.<xsl:value-of select="source_generation"/><sub>(<xsl:value-of select="source_id"/>)</sub>
                    </td>
                    <td>
                      <strong><xsl:value-of select="related_keyed_name"/></strong> gen.<xsl:value-of select="related_generation"/><sub>(<xsl:value-of select="related_id"/>)</sub>
                    </td>
                  </tr>
                </xsl:for-each>
              </tbody>
            </table>
          </xsl:otherwise>
        </xsl:choose>
      </body>
    </html>
  </xsl:template>
</xsl:stylesheet>
]]></xsl_stylesheet>
  <name>PE_SearchPartCircularReferences</name>
 </Item>
</AML>