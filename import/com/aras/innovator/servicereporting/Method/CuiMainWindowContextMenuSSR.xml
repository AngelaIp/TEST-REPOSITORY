<AML>
 <Item type="Method" id="A5AF3315A8DF46F5895729753C3BF170" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[	Item items = null;

	//ItemType and Item reports
	string itemTypeId = this.getProperty("item_type_id");
	if (!string.IsNullOrEmpty(itemTypeId))
	{
		//Sel-Service Reports
		Item userReports = this.newItem("Method", "GetSelfServiceReports");
		Item clickHandler = GetMethodByConfigId("6FF7BD1B2A7E4BA0B06F3ACCC6293B39");
		userReports.setProperty("base_item_type", itemTypeId);
		userReports = userReports.apply();
		if (!userReports.isError())
		{
			items = HandleMenuButtons(userReports, clickHandler, "userreport:{0}");
		}
	}

	return items ?? this.getInnovator().newResult("");
}

private static Item HandleMenuButtons(Item reports, Item clickHandler, string reportTemplate)
{
	string clickHandlerId = clickHandler.getID();
	string clickHandlerName = clickHandler.getProperty("name");
	int reportsCount = reports.getItemCount();
	if (reportsCount > 0)
	{
		Item cuiItems = reports.newItem();
		for (var i = 0; i < reportsCount; i++)
		{
			Item currentReport = reports.getItemByIndex(i);
			Item menu = currentReport.newItem("CommandBarMenu");
			string reportId = currentReport.getID();
			string reportName = string.Format(CultureInfo.InvariantCulture, reportTemplate, reportId);
			menu.setProperty("name", reportName);
			menu.setProperty("label", currentReport.getProperty("label") ?? currentReport.getProperty("name"));
			menu.setProperty("on_click_handler", clickHandlerId);
			menu.setPropertyAttribute("on_click_handler", "keyed_name", clickHandlerName);
			menu.setPropertyAttribute("on_click_handler", "type", "Method");

			menu.setProperty("action", "Add");
			menu.setID(reportId);
			menu.removeAttribute("isNew");
			menu.removeAttribute("isTemp");
			cuiItems.appendItem(menu);
		}

		// newItem() is creates empty node. It's should be deleted
		cuiItems.removeItem(cuiItems.getItemByIndex(0));
		return cuiItems;
	}

	return null;
}

private Item GetMethodByConfigId(string configId)
{
	Item method = this.newItem("Method", "get");
	method.setAttribute("select", "id,name");
	method.setProperty("config_id", configId);
	return method.apply();
]]></method_code>
  <method_type>C#</method_type>
  <name>CuiMainWindowContextMenuSSR</name>
 </Item>
</AML>