<AML>
 <Item type="Method" id="B18D06E8C92542778E0552CC15C52114" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[if (inArgs.isReinit) {
	if (Object.getOwnPropertyNames(inArgs.eventState).length === 0) {
		var states = aras.evalMethod('cui_reinit_calculate_states', '', {eventType: inArgs.eventType});
		var keys = Object.keys(states);
		for (var i = 0; i < keys.length; i++) {
			inArgs.eventState[keys[i]] = states[keys[i]];
		}
	}

	var topWindow = aras.getMostTopWindowWithAras(window);
	var workerFrame = topWindow.work;
	if (workerFrame && workerFrame.grid) {
		var itemIDs = workerFrame.grid.getSelectedItemIds();
		var state;
		if (workerFrame.itemTypeName !== 'InBasket Task') {
			state = ((inArgs.eventState.canBeLocked || inArgs.eventState.isEdit) && itemIDs && itemIDs.length == 1 &&
			!inArgs.eventState.isDiscoverOnly) && !isFunctionDisabled(workerFrame.itemTypeName, 'Edit');
		} else {
			var itemId = workerFrame.grid['getSelectedId_Experimental']();
			var res = workerFrame.currQryItem.getResult();
			var itemNd = res.selectSingleNode('Item[@id="' + itemId + '"]') || aras.getFromCache(itemId);
			var itemTypeName = aras.getItemTypeName(aras.getItemProperty(itemNd, 'itemtype'));
			state = itemIDs && itemIDs.length == 1 && !inArgs.eventState.isDiscoverOnly && !isFunctionDisabled(itemTypeName, 'Edit');
		}
		return {'cui_disabled': !state};
	} else {
		return {'cui_disabled': true};
	}
}
return {};
]]></method_code>
  <method_type>JavaScript</method_type>
  <name>cui_reinit_mwt_edit</name>
 </Item>
</AML>